services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: sleep infinity
    env_file:
      - .env

  oracle:
    build:
      context: ../_oracle/
      dockerfile: Dockerfile

  hardhat:
    image: ghcr.io/hilmoo/hadhat-docker-node:main
    container_name: hardhat
    ports:
      - "8545:8545"

  block-explorer:
    image: ghcr.io/hilmoo/custom-block-explorer:main
    container_name: block-explorer
    network_mode: service:app

  kubo:
    image: ipfs/kubo:v0.35.0
    container_name: ipfs_host
    volumes:
      - delok_ipfs_staging:/export
      - delok_ipfs_data:/data/ipfs
    ports:
      - 4001:4001
      - 4001:4001/udp
      - 127.0.0.1:8080:8080
      - 127.0.0.1:5001:5001

  LMS_elemes:
    image: ghcr.io/hilmoo/elemes:1.2.0
    container_name: delok_elemes
    ports:
      - "4000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
    depends_on:
      db_elemes:
        condition: service_healthy
    networks:
      - delok_elemes-network

  db_elemes:
    image: postgres:17-alpine
    container_name: delok_elemes-db
    volumes:
      - delok_db-elemes:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - delok_elemes-network

volumes:
  delok_db-elemes:
  delok_ipfs_staging:
  delok_ipfs_data:

networks:
  delok_elemes-network:
